import cv2
import numpy as np
import glob

page_num = 1

for filepath in glob.iglob('images/H0.jpg'):
    image = cv2.imread(filepath, cv2.COLOR_BGR2RGB)
    filepath_name = "R" + filepath

    dim = (4000,3000)
    resized = cv2.resize(image, dim, interpolation = cv2.INTER_AREA)
    cropped_image = image[300:3700, 300:2700]
    grayImage = cv2.cvtColor(resized, cv2.COLOR_BGR2GRAY)
    (thresh, blackAndWhiteImage) = cv2.threshold(grayImage, 127, 255, cv2.THRESH_BINARY)

    cv2.imwrite('gray/G0.jpg', grayImage)

    page_num += 1 

name = "H23 - v0.jpg"

img1 = cv2.imread("blacked/" + name, cv2.COLOR_BGR2RGB)
dim = (4000,3000)
#resized = cv2.resize(img1, dim, interpolation = cv2.INTER_AREA)
#cropped_image = img1[300:3700, 300:2700]
grayImage = cv2.cvtColor(img1, cv2.COLOR_BGR2GRAY)
(thresh, blackAndWhiteImage) = cv2.threshold(grayImage, 127, 255, cv2.THRESH_BINARY)

cv2.imwrite("gray/" + name, grayImage)

# original file
img1 = cv2.imread('images/H0.jpg', cv2.COLOR_BGR2RGB)

#resizing picture
dim = (4000, 3000)
resized = cv2.resize(img1, dim, interpolation = cv2.INTER_AREA)

cv2.imshow('resized', resized)

change_bg = alter_bg()
change_bg.load_pascalvoc_model("deeplabv3_xception_tf_dim_ordering_tf_kernels.h5")
output = change_bg.change_bg_img(f_image_path = "img1",b_image_path = "background.webp")
cv2.imwrite("img.jpg", output)
cv2.imshow(output)

grayImage = cv2.cvtColor(resized, cv2.COLOR_BGR2GRAY)

(thresh, blackAndWhiteImage) = cv2.threshold(grayImage, 127, 255, cv2.THRESH_BINARY)

cv2.imshow('Original image',img1)
cv2.imshow('Gray image', grayImage)

print('original size', img1.shape)
print('resized shape', resized.shape)


# opencv loads the image in BGR, convert it to RGB

image_copy = np.copy(img1)
plt.imshow(image_copy)

image_copy = cv2.cvtColor(image_copy, cv2.COLOR_BGR2RGB)

lower_white = np.array([220, 220, 220], dtype=np.uint8)
upper_white = np.array([255, 255, 255], dtype=np.uint8)
mask = cv2.inRange(image_copy, lower_white, upper_white)  # could also use threshold
cv2.imshow(mask, cmap='gray')

masked_image = np.copy(image_copy)
masked_image[mask != 0] = [0, 0, 0]

cv2.imshow('masked image', masked_image)

cv2.waitKey(0)
cv2.destroyAllWindows()
